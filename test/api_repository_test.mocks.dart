// Mocks generated by Mockito 5.4.2 from annotations
// in recipe_finder/test/api_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:recipe_finder/repositories/api_repository.dart' as _i2;
import 'package:recipe_finder/repositories/models/ingredient.dart' as _i4;
import 'package:recipe_finder/repositories/models/recipe.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [FoodApiRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockFoodApiRepositoryImpl extends _i1.Mock
    implements _i2.FoodApiRepositoryImpl {
  @override
  _i3.Future<List<_i4.Ingredient>> searchIngredient(String? qry) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchIngredient,
          [qry],
        ),
        returnValue: _i3.Future<List<_i4.Ingredient>>.value(<_i4.Ingredient>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i4.Ingredient>>.value(<_i4.Ingredient>[]),
      ) as _i3.Future<List<_i4.Ingredient>>);
  @override
  _i3.Future<List<_i5.Recipe>> getRecipes(List<String>? ingredients) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRecipes,
          [ingredients],
        ),
        returnValue: _i3.Future<List<_i5.Recipe>>.value(<_i5.Recipe>[]),
        returnValueForMissingStub:
            _i3.Future<List<_i5.Recipe>>.value(<_i5.Recipe>[]),
      ) as _i3.Future<List<_i5.Recipe>>);
}
